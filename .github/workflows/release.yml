name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  get-next-version:
    uses: semantic-release-action/next-release-version/.github/workflows/next-release-version.yml@v4

  build-and-release:
    name: Release
    runs-on: ubuntu-latest
    needs: get-next-version
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: needs.get-next-version.outputs.new-release-published == 'true'
    strategy:
      matrix:
        target:
            - x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install musl
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
          rustup target add x86_64-unknown-linux-musl

      - name: Install semantic-release-cargo
        run: cargo install --locked semantic-release-cargo

      - name: Install cargo-deb
        run: cargo install --locked cargo-deb

      - name: Prepare semantic-release for Rust
        run: semantic-release-cargo prepare ${{ needs.get-next-version.outputs.new-release-version }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build package
        run: cargo deb --target ${{ matrix.target }}

      - name: Create dist directory
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/blob dist/blob-${{ matrix.target }}
          cp target/${{ matrix.target }}/debian/*.deb dist/

      - name: Create binary checksum
        run: |
          shasum --algorithm 256 --binary *.deb blob-${{ matrix.target }} | tee SHA256SUMS.txt
        working-directory: ./dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - run: npm ci
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.PUBLISH_SECRET }}
